{
  "openapi": "3.0.3",
  "info": {
    "title": "SREMRCM Backend API",
    "description": "This API handles the requests from the SREMRCM Frontend. It will handles such operations like data creation, data retrieval, users\nThe main purpose is to create a design that is decoupled and that is as modular as possible",
    "contact": {
      "name": "the API Dev Team",
      "email": "op.gs.142857@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.2"
  },
  "servers": [
    {
      "url": "SREMRCM-SANDBOX",
      "description": "The SREMRCM sandbox API"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      },
      "appId": {
        "type": "apiKey",
        "in": "header",
        "name": "X-APP-ID"
      }
    },
    "parameters": {
      "limit": {
        "in": "query",
        "name": "limit",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 10
        },
        "description": "The maximum amount of a certain data that can be returned",
        "required": true
      },
      "from": {
        "in": "query",
        "name": "from",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "description": "The starting index from which a certain data must be returned",
        "required": false
      },
      "to": {
        "in": "query",
        "name": "to",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "description": "The last index to which a certain data must be returned",
        "required": false
      }
    },
    "schemas": {
      "meta": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "succeeded",
                  "failed",
                  "partly-succeeded"
                ],
                "example": "succeeded",
                "default": "succeeded",
                "description": "The overall status of the call"
              },
              "message": {
                "type": "string",
                "example": "The operation was successfull"
              }
            }
          }
        }
      },
      "News": {
        "type": "object",
        "required": [
          "id",
          "title",
          "content",
          "date",
          "author"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "4bc9280-fe31-4d95-894b-51e34fee03cd",
            "description": "The unique id of the post",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "description": "The title of the News post",
            "example": "The Second Congress will take place next Sunday"
          },
          "content": {
            "type": "string",
            "description": "The contents of the news post. It can contain any type of data that can be parsed as text",
            "example": "Welcome to the congress, please have your invite with you at all times!"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date at which the post was created"
          },
          "author": {
            "type": "string",
            "description": "The person or entity who created the news post",
            "example": "Jim Smith"
          }
        }
      },
      "GetNews": {
        "allOf": [
          {
            "$ref": "#/components/schemas/meta"
          },
          {
            "type": "object",
            "required": [
              "news"
            ],
            "properties": {
              "news": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/News"
                }
              }
            }
          }
        ]
      },
      "PostNews": {
        "allOf": [
          {
            "$ref": "#/components/schemas/meta"
          },
          {
            "$ref": "#/components/schemas/News"
          }
        ]
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/meta"
            },
            "example": {
              "meta": {
                "status": "failed",
                "message": "The request is invalid or malformed."
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/meta"
            },
            "example": {
              "meta": {
                "status": "failed",
                "message": "Authentication failed, access denied."
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/meta"
            },
            "example": {
              "meta": {
                "status": "failed",
                "message": "The requested resource could not be found on this server."
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/meta"
            },
            "example": {
              "meta": {
                "status": "failed",
                "message": "An error occurred on the server, please try again later."
              }
            }
          }
        }
      },
      "get-news": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetNews"
            }
          }
        }
      },
      "post-news": {
        "description": "Created",
        "headers": {
          "Location": {
            "schema": {
              "type": "string"
            },
            "description": "The new location for the created resource"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PostNews"
            },
            "example": {
              "meta": {
                "status": "succeeded",
                "message": "New resource created at the location from the Location header"
              },
              "id": "4bc9280-fe31-4d95-894b-51e34fee03cd",
              "title": "The Second Congress will take place next Sunday",
              "content": "Welcome to the congress, please have your invite with you at all times!",
              "date": "2023-02-05",
              "author": "Jim Smith"
            }
          }
        }
      }
    },
    "requestBodies": {
      "post-news": {
        "description": "Create a new News post",
        "content": {
          "applicaion/json": {
            "schema": {
              "$ref": "#/components/schemas/News"
            }
          }
        },
        "required": true
      }
    }
  },
  "security": [
    {
      "apiKey": [],
      "appId": []
    }
  ],
  "tags": [
    {
      "name": "News",
      "description": "All the endpoints and resources regarding News"
    }
  ],
  "paths": {
    "/api/v1/news": {
      "get": {
        "description": "Gets a list of the news based on query parameters",
        "operationId": "getNews",
        "summary": "Get the list of news posts based on query parameters",
        "tags": [
          "News"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/from"
          },
          {
            "$ref": "#/components/parameters/to"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/get-news"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "description": "Post a new object of type News",
        "operationId": "postNews",
        "summary": "Post a new News object and create a resource in the database",
        "tags": [
          "News"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/post-news"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/post-news"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  }
}